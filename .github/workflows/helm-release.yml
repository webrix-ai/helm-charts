name: Release Charts

on:
  workflow_dispatch:
    inputs:
      release_chart:
        description: "Mark the release as Latest? (unchecked = publish but not latest)"
        type: boolean
        default: false
        required: true
      chart_version:
        description: "Chart version to use (leave empty to auto-bump)"
        type: string
        required: false
      app_tag:
        description: "Docker image tag for mcp-s-app"
        type: string
        required: false
        default: "latest"
      connect_tag:
        description: "Docker image tag for mcp-s-connect"
        type: string
        required: false
        default: "latest"
      db_service_tag:
        description: "Docker image tag for mcp-s-db-service"
        type: string
        required: false
        default: "latest"
      run_tag:
        description: "Docker image tag for mcp-s-run"
        type: string
        required: false
        default: "latest"
      grafana_tag:
        description: "Docker image tag for mcp-s-grafana"
        type: string
        required: false
        default: "latest"
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      OVERLAY_TO_PUBLISH: on-prem
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: helm-charts
          fetch-depth: 0

      - name: Configure Git
        working-directory: helm-charts
        run: |
          git config user.name "$GITHUB_ACTOR" --global
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com" --global

      - name: Set up GitHub auth token
        id: github-auth-token
        uses: ./helm-charts/.github/actions/github-auth-token
        with:
          GHA_PAT: ${{ secrets.GHA_PAT }}
          GH_APP_PK: ${{ secrets.GH_APP_PK }}
          GH_APP_ID: ${{ secrets.GH_APP_ID }}

      - name: Checkout deployment
        uses: actions/checkout@v4
        with:
          path: deployment
          repository: webrix-ai/deployment
          fetch-depth: 0
          token: ${{ steps.github-auth-token.outputs.token }}

      - name: Bump Chart Version
        working-directory: helm-charts
        run: |
          CHART_FILE=charts/mcp-s/Chart.yaml
          OLD_VERSION=$(yq -r '.version' "$CHART_FILE")
          
          if [ -n "${{ inputs.chart_version }}" ]; then
            NEW_VERSION="${{ inputs.chart_version }}"
            echo "Using provided version: $OLD_VERSION -> $NEW_VERSION"
          else
            IFS='.' read -r major minor patch <<< "$OLD_VERSION"
            NEW_VERSION="$major.$minor.$((patch+1))"
            echo "Auto-bumping version: $OLD_VERSION -> $NEW_VERSION"
          fi
          
          yq -i ".version = \"$NEW_VERSION\"" "$CHART_FILE"
          git add "$CHART_FILE"
          git commit -m "chore: bump chart version to $NEW_VERSION" || echo "No changes to commit"
          git push origin HEAD:main

      - name: Create charts from services
        working-directory: ./helm-charts
        run: |
          # read chart version from charts/mcp-s/Chart.yaml
          CHART_VERSION=$(yq -o=json eval '.version' charts/mcp-s/Chart.yaml | jq -r .)
          echo "Chart version: $CHART_VERSION"

          npx helmify-kustomize build ../deployment/mcp-s-app/deploy \
            --target ./charts/mcp-s-app \
            --overlay-filter overlays/${{ env.OVERLAY_TO_PUBLISH }} \
            --parametrize env=base/container.env \
            --parametrize env=overlays/${{ env.OVERLAY_TO_PUBLISH }}/container.env \
            --parametrize-configmap env=mcp-s-app-container-vars \
            --clear true \
            --chart-version $CHART_VERSION

          sed -i 's/newTag: .*/newTag: ${{ inputs.app_tag }}/g' ./charts/mcp-s-app/values.yaml

          
          npx helmify-kustomize build ../deployment/mcp-s-connect/deploy \
            --target ./charts/mcp-s-connect \
            --overlay-filter overlays/${{ env.OVERLAY_TO_PUBLISH }} \
            --parametrize env=base/container.env \
            --parametrize env=overlays/${{ env.OVERLAY_TO_PUBLISH }}/container.env \
            --parametrize-configmap env=mcp-s-connect-container-vars \
            --clear true \
            --chart-version $CHART_VERSION
          
          sed -i 's/newTag: .*/newTag: ${{ inputs.connect_tag }}/g' ./charts/mcp-s-connect/values.yaml
          
          npx helmify-kustomize build ../deployment/mcp-s-db-service/deploy \
            --target ./charts/mcp-s-db-service \
            --overlay-filter overlays/${{ env.OVERLAY_TO_PUBLISH }} \
            --parametrize env=base/container.env \
            --parametrize env=overlays/${{ env.OVERLAY_TO_PUBLISH }}/container.env \
            --parametrize-configmap env=mcp-s-db-service-container-vars \
            --clear true \
            --chart-version $CHART_VERSION
          
          sed -i 's/newTag: .*/newTag: ${{ inputs.db_service_tag }}/g' ./charts/mcp-s-db-service/values.yaml

          npx helmify-kustomize build ../deployment/mcp-s-run/deploy \
            --target ./charts/mcp-s-run \
            --overlay-filter overlays/${{ env.OVERLAY_TO_PUBLISH }} \
            --parametrize env=base/container.env \
            --parametrize env=overlays/${{ env.OVERLAY_TO_PUBLISH }}/container.env \
            --parametrize-configmap env=mcp-s-run-container-vars \
            --clear true \
            --chart-version $CHART_VERSION
          
          sed -i 's/newTag: .*/newTag: ${{ inputs.run_tag }}/g' ./charts/mcp-s-run/values.yaml
          
          npx helmify-kustomize build ../deployment/mcp-s-grafana/deploy \
            --target ./charts/mcp-s-grafana \
            --overlay-filter overlays/${{ env.OVERLAY_TO_PUBLISH }} \
            --parametrize env=base/container.env \
            --parametrize env=overlays/${{ env.OVERLAY_TO_PUBLISH }}/container.env \
            --parametrize-configmap env=mcp-s-grafana-container-vars \
            --clear true \
            --chart-version $CHART_VERSION 

          sed -i 's/newTag: .*/newTag: ${{ inputs.grafana_tag }}/g' ./charts/mcp-s-grafana/values.yaml
          
      - name: add to git
        working-directory: helm-charts
        run: |
          git add .
          if ! git diff-index --quiet HEAD --; then
            git commit -m "updated charts"
            git push
          else
            echo "No changes to commit, working tree is clean"
          fi
  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Pull latest chart
        run: |
          git pull origin ${{ github.ref }}

      - name: Configure git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.7.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          skip_existing: true
          mark_as_latest: ${{ inputs.release_chart }}
