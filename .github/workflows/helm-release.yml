name: Release Charts

on:
  workflow_dispatch:
    inputs:
      release_chart:
        description: "Mark the release as Latest? (unchecked = publish but not latest)"
        type: boolean
        default: false
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      OVERLAY_TO_PUBLISH: on-prem
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: helm-charts
          fetch-depth: 0

      - name: Configure Git
        working-directory: helm-charts
        run: |
          git config user.name "$GITHUB_ACTOR" --global
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com" --global

      - name: Set up GitHub auth token
        id: github-auth-token
        uses: ./helm-charts/.github/actions/github-auth-token
        with:
          GHA_PAT: ${{ secrets.GHA_PAT }}
          GH_APP_PK: ${{ secrets.GH_APP_PK }}
          GH_APP_ID: ${{ secrets.GH_APP_ID }}

      - name: Checkout deployment
        uses: actions/checkout@v4
        with:
          path: deployment
          repository: webrix-ai/deployment
          fetch-depth: 0
          token: ${{ steps.github-auth-token.outputs.token }}

      - name: Bump Chart Version
        working-directory: helm-charts
        run: |
          CHART_FILE=charts/mcp-s/Chart.yaml
          OLD_VERSION=$(yq -r '.version' "$CHART_FILE")
          IFS='.' read -r major minor patch <<< "$OLD_VERSION"
          NEW_VERSION="$major.$minor.$((patch+1))"
          echo "Bumping version: $OLD_VERSION -> $NEW_VERSION"
          yq -i ".version = \"$NEW_VERSION\"" "$CHART_FILE"
          git add "$CHART_FILE"
          git commit -m "chore: bump chart version to $NEW_VERSION" || echo "No changes to commit"
          git push origin HEAD:main

      - name: Create charts from services
        working-directory: ./helm-charts
        run: |
          # read chart version from charts/mcp-s/Chart.yaml
          CHART_VERSION=$(yq -o=json eval '.version' charts/mcp-s/Chart.yaml | jq -r .)
          echo "Chart version: $CHART_VERSION"
          npx helmify-kustomize build ../deployment/mcp-s-app/deploy --target ./charts/mcp-s-app --overlay-filter overlays/${{ env.OVERLAY_TO_PUBLISH }} --parametrize env=base/container.env --parametrize env=overlays/${{ env.OVERLAY_TO_PUBLISH }}/container.env --parametrize-configmap env=mcp-s-app-container-vars --clear true --chart-version $CHART_VERSION
          npx helmify-kustomize build ../deployment/mcp-s-connect/deploy --target ./charts/mcp-s-connect --overlay-filter overlays/${{ env.OVERLAY_TO_PUBLISH }} --parametrize env=base/container.env --parametrize env=overlays/${{ env.OVERLAY_TO_PUBLISH }}/container.env  --parametrize-configmap env=mcp-s-connect-container-vars --clear true --chart-version $CHART_VERSION
          npx helmify-kustomize build ../deployment/mcp-s-db-service/deploy --target ./charts/mcp-s-db-service --overlay-filter overlays/${{ env.OVERLAY_TO_PUBLISH }} --parametrize env=base/container.env --parametrize env=overlays/${{ env.OVERLAY_TO_PUBLISH }}/container.env  --parametrize-configmap env=mcp-s-db-service-container-vars --clear true --chart-version $CHART_VERSION
          npx helmify-kustomize build ../deployment/mcp-s-run/deploy --target ./charts/mcp-s-run --overlay-filter overlays/${{ env.OVERLAY_TO_PUBLISH }} --parametrize env=base/container.env --parametrize env=overlays/${{ env.OVERLAY_TO_PUBLISH }}/container.env  --parametrize-configmap env=mcp-s-run-container-vars --clear true --chart-version $CHART_VERSION
          npx helmify-kustomize build ../deployment/mcp-s-grafana/deploy --target ./charts/mcp-s-grafana --overlay-filter overlays/${{ env.OVERLAY_TO_PUBLISH }} --parametrize env=base/container.env --parametrize env=overlays/${{ env.OVERLAY_TO_PUBLISH }}/container.env  --parametrize-configmap env=mcp-s-grafana-container-vars --clear true --chart-version $CHART_VERSION

      # Replace quay.io/idan-chetrit/mcp-s-run with quay.io/idan-chetrit/run and quay.io/idan-chetrit/mcp-s-db-service with quay.io/idan-chetrit/db-service
      - name: Replace image names
        working-directory: ./helm-charts
        run: |
          find ./charts -type f -name 'values.yaml' | while read file; do
            sed -i 's/quay.io\/idan-chetrit\/mcp-s-run/quay.io\/idan-chetrit\/run/g' "$file"
            sed -i 's/quay.io\/idan-chetrit\/mcp-s-db-service/quay.io\/idan-chetrit\/db-service/g' "$file"
          done

      - name: add to git
        working-directory: helm-charts
        run: |
          git add .
          if ! git diff-index --quiet HEAD --; then
            git commit -m "updated charts"
            git push
          else
            echo "No changes to commit, working tree is clean"
          fi
  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Pull latest chart
        run: |
          git pull origin ${{ github.ref }}

      - name: Configure git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.7.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          skip_existing: true
          mark_as_latest: ${{ github.event.inputs.release_chart }}
